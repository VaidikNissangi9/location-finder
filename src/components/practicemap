import "mapbox-gl/dist/mapbox-gl.css";
import "react-map-gl-geocoder/dist/mapbox-gl-geocoder.css";
import React, { Component } from "react";
import mapboxgl from "mapbox-gl";
import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'

mapboxgl.accessToken =
  "pk.eyJ1IjoidmFpZGlrIiwiYSI6ImNrMjFtd3RyMjFidXgzZXVnYXZ3eGhsMzAifQ.UvLZHlFR1OgfA0L6KAqSWA";
const style = {
  position: 'absolute',
  top: "90px",
  bottom: "2px",
  width: '100%'
};

export default class Map extends Component {
  state = {
    map: "",
    mapType: ""
  }
  componentDidMount() {
    const map = new mapboxgl.Map({
      container: this.mapContainer,
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [-96, 37.8],
      zoom: 3
    });
    map.addControl(new mapboxgl.GeolocateControl({
      positionOptions: {
        enableHighAccuracy: true
      },
      trackUserLocation: true
    }));
    map.addControl(new MapboxGeocoder({
      accessToken: mapboxgl.accessToken,
      mapboxgl: mapboxgl
    }));
    this.setState({ map: map });
  }
  componentDidUpdate(){
    const map=this.state.map;
    map.setStyle('mapbox://styles/mapbox/'+this.state.mapType)
  }

  componentWillUnmount() {
    this.state.map.remove();
  }

  render() {
    // console.log(this.state.map)
    return (
      <div>
        <div style={style} ref={el => this.mapContainer = el} />
        <div id='menu'>
          <input id='streets-v11' type='radio' name='rtoggle' value='streets' defaultChecked onClick={() => this.setState({ mapType: "streets-v11" })} />
          streets
          <input id='satellite-v9' type='radio' name='rtoggle' value='satellite' onClick={() => this.setState({ mapType: "satellite-v9" })} />
          satellite
        </div>
      </div>
    )
  }
}


if (props.check) {
    map.flyTo({
      center: [props.coordinates.lng, props.coordinates.lat]
    });




import React, { useEffect, useRef, useState } from "react";
import mapboxgl from "mapbox-gl";
// import "mapbox-gl/dist/mapbox-gl.css";
import "react-map-gl-geocoder/dist/mapbox-gl-geocoder.css";
import "mapbox-gl/dist/mapbox-gl.css";
import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'
const styles = {
  marginTop:"20px",
  width: "calc(99.5vw )",
  height: "calc(87vh - 5px)",
  position: "absolute"
};

const MapboxGLMap = (props) => {
  const [map, setMap] = useState(null);
  const mapContainer = useRef(null);

  useEffect(() => {
    mapboxgl.accessToken =
      "pk.eyJ1IjoiYnJpYW5iYW5jcm9mdCIsImEiOiJsVGVnMXFzIn0.7ldhVh3Ppsgv4lCYs65UdA";
    const initializeMap = ({ setMap, mapContainer }) => {
      const map = new mapboxgl.Map({
        container: mapContainer.current,
        style: "mapbox://styles/mapbox/streets-v11", // stylesheet location
        center: [-96, 36.5],
        zoom: 3
      });
      map.addControl(new mapboxgl.GeolocateControl({
        positionOptions: {
          enableHighAccuracy: true
        },
        trackUserLocation: true
      }));
      map.addControl(new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
      }));
      map.on("load", () => {
        setMap(map);
        map.resize();
      });
    };
    
    if (!map) initializeMap({ setMap, mapContainer });
  }, [map]);

  return (
    <React.Fragment>
      <div ref={el => (mapContainer.current = el)} style={props.styles || styles} />
      <div id='menu'>
        <input id='streets-v11' type='radio' name='rtoggle' value='streets' defaultChecked onClick={() => this.setState({ mapType: "streets-v11" })} />
        streets
          <input id='satellite-v9' type='radio' name='rtoggle' value='satellite' onClick={() => this.setState({ mapType: "satellite-v9" })} />
        satellite
        </div>
    </React.Fragment>
  );
};

export default MapboxGLMap;









import React, { useRef, useState, useEffect } from "react";
import mapboxgl from "mapbox-gl";
// import "mapbox-gl/dist/mapbox-gl.css";
import "react-map-gl-geocoder/dist/mapbox-gl-geocoder.css";
import "mapbox-gl/dist/mapbox-gl.css";
// import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'
// import { Marker } from "react-mapbox-gl";

mapboxgl.accessToken = "pk.eyJ1IjoiYnJpYW5iYW5jcm9mdCIsImEiOiJsVGVnMXFzIn0.7ldhVh3Ppsgv4lCYs65UdA";

const MapboxGLMap = (props) => {
  const mapContainer = useRef();
  const [map, setMap] = useState(null);
  const [mapType, setmapType] = useState('streets-v11');
  useEffect(() => {
    setMap(new mapboxgl.Map({
      container: mapContainer.current,
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [-96, 36.5],
      zoom: 9
    }));
  }, [])

  if (props.coordinates.lng && props.coordinates.lat) {
    map.flyTo({
      center: [props.coordinates.lng, props.coordinates.lat]
    });
    map.setStyle('mapbox://styles/mapbox/'+mapType)    
  }
  return (
    <React.Fragment>
      <div ref={el => (mapContainer.current = el)} style={props.styles} />
      <div id='menu'>
        <input id='streets-v11' type='radio' name='rtoggle' value='streets' defaultChecked onClick={() => setmapType("streets-v11" )} />
        streets
          <input id='satellite-v9' type='radio' name='rtoggle' value='satellite' onClick={() => setmapType("satellite-v9" )} />
        satellite
        </div>
    </React.Fragment>
  );
};
MapboxGLMap.defaultProps = {
  styles: {
    marginTop: "20px",
    width: "calc(99.5vw )",
    height: "calc(87vh - 5px)",
    position: "absolute"
  },
  coordinates: {
    lng: -96,
    lat: 36.5
  }
}
export default MapboxGLMap;



















import React, { useEffect, useRef, useState } from "react";
import mapboxgl from "mapbox-gl";
// import "mapbox-gl/dist/mapbox-gl.css";
import "react-map-gl-geocoder/dist/mapbox-gl-geocoder.css";
import "mapbox-gl/dist/mapbox-gl.css";
import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'
const styles = {
  marginTop:"20px",
  width: "calc(99.5vw )",
  height: "calc(87vh - 5px)",
  position: "absolute"
};

const MapboxGLMap = (props) => {
  const [map, setMap] = useState(null);
  const mapContainer = useRef(null);

  useEffect(() => {
    mapboxgl.accessToken =
      "pk.eyJ1IjoiYnJpYW5iYW5jcm9mdCIsImEiOiJsVGVnMXFzIn0.7ldhVh3Ppsgv4lCYs65UdA";
    const initializeMap = ({ setMap, mapContainer }) => {
      const map = new mapboxgl.Map({
        container: mapContainer.current,
        style: "mapbox://styles/mapbox/streets-v11", // stylesheet location
        center: [-96, 36.5],
        zoom: 3
      });
      map.addControl(new mapboxgl.GeolocateControl({
        positionOptions: {
          enableHighAccuracy: true
        },
        trackUserLocation: true
      }));
      map.addControl(new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
      }));
      map.on("load", () => {
        setMap(map);
        map.resize();
      });
    };
    if (props.check) {
      map.flyTo({
        center: [props.coordinates.lng, props.coordinates.lat]
      })}
    if (!map) initializeMap({ setMap, mapContainer });
  }, [map]);

  return (
    <React.Fragment>
      <div ref={el => (mapContainer.current = el)} style={props.styles || styles} />
      <div id='menu'>
        <input id='streets-v11' type='radio' name='rtoggle' value='streets' defaultChecked onClick={() => map.setStyle('mapbox://styles/mapbox/streets-v11') } />
        streets
          <input id='satellite-v9' type='radio' name='rtoggle' value='satellite' onClick={() => map.setStyle('mapbox://styles/mapbox/satellite-v9')} />
        satellite
        </div>
    </React.Fragment>
  );
};
MapboxGLMap.defaultProps = {
  styles: {
    marginTop: "20px",
    width: "calc(99.5vw )",
    height: "calc(87vh - 5px)",
    position: "absolute"
  },
  coordinates: {
    lng: -96,
    lat: 36.5
  },check:false
}
export default MapboxGLMap;
